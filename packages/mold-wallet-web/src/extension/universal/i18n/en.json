{
  "extension": {
    "details": {
      "name": "Universal Credential"
    }
  },
  "menu": {
    "main": "Universal VCs"
  },
  "tab": {
    "build": {
      "label": "Build"
    },
    "sign": {
      "label": "Sign"
    },
    "claim": {
      "label": "Claim"
    },
    "offer": {
      "label": "Offer"
    },
    "request": {
      "label": "Request"
    },
    "response": {
      "label": "Response"
    },
    "read": {
      "label": "Read"
    }
  },
  "output": {
    "copy": "Copy",
    "export": "Export"
  },
  "builder": {
    "title": "Universal Verifiable Credential Creation",
    "type": {
      "label": "Types",
      "hint": "Specify types for the credential",
      "error": {
        "json": "Credential type should be valid JSON string"
      }
    },
    "context": {
      "label": "Context",
      "import": "Import",
      "hint": "JSON with @context property extension",
      "error": {
        "json": "Context should be a valid JSON array containing strings and objects"
      }
    },
    "subject": {
      "label": "Credential Subject",
      "import": "Import",
      "hint": "JSON with corresponding crednetial subject",
      "error": {
        "json": "It doesn't make sense to create a credential without any data inside"
      }
    },
    "evidence": {
      "label": "Evidence",
      "import": "Import",
      "hint": "JSON with corresponding evidence documents (short form)",
      "error": {
        "json": "Evidence should be ommited or be a valid JSON object or array of JSON objects"
      }
    },
    "schema": {
      "label": "Credential Schema",
      "import": "Import",
      "hint": "JSON with corresponding credential schema document",
      "error": {
        "json": "Credential schema should be ommited or be a valid JSON Avj object or array of JSON Avj objects"
      }
    },
    "build": "Build VC"
  },
  "signer": {
    "title": "Universal Verifiable Credential Signer",
    "unsigned": {
      "import": "Import",
      "label": "Unsigned Verifiable Credential",
      "hint": "Specify JSON of Unsigned Verifiable Credential",
      "error": {
        "json": "Unsigned Credential should be a valid JSON text"
      }
    },
    "evidence": {
      "import": "Import",
      "label": "Signing Idenity",
      "hint": "Verifiable Credential to use as signature evidence (keep empty to self-sign)",
      "error": {
        "json": "Signing Idenity should be a valid JSON text or empty string"
      }
    },
    "sign": "Sign VC"
  },
  "claimer": {
    "title": "Universal Verifiable Credential Claimer",
    "unsigned": {
      "import": "Import",
      "label": "Unsigned Verifiable Credential",
      "hint": "Specify JSON of Unsigned Verifiable Credential",
      "error": {
        "json": "Unsigned Credential should be a valid JSON text"
      }
    },
    "holder": {
      "import": "Import",
      "label": "DID Document or Verifiable Credential",
      "hint": "Specify JSON of DID Document or Verifiable Credential (optional)",
      "error": {
        "json": "DID Document Credential should be a valid JSON text"
      }
    },
    "claim": "Produce"
  },
  "proposer": {
    "title": "Universal Verifiable Credential Issuer",
    "claim": {
      "import": "Import",
      "label": "Verifiable Presentation with claims",
      "hint": "Specify JSON of Verifiable Presentation with claims",
      "error": {
        "json": "Verifiable Presentation should be a valid JSON text"
      }
    },
    "issuer": {
      "import": "Import",
      "label": "Issuer Evidence",
      "hint": "JSON of Verifiable Credential that will be used as evidence of issuer (optional)",
      "error": {
        "json": "Verifiable Credential should be a valid JSON text"
      }
    },
    "offer": "Issue"
  },
  "requester": {
    "title": "Universal Verifiable Credential Requester"
  },
  "responder": {
    "title": "Universal Verifiable Credential Responder"
  },
  "reader": {
    "title": "Universal Verifiable Credential Reader",
    "verifyIdentityStrictly": {
      "label": "Verify Identity Strictly",
      "hint": "To treat the provided document as valid, all issuers should be trusted."
    },
    "vo": {
      "import": "Load from file",
      "label": "Verifiable Credential",
      "hint": "Specify JSON of Verifiable Credential",
      "error": {
        "json": "Credential should be a valid JSON text"
      }
    },
    "validate": "Validate"
  }
}